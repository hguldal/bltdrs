@{
  // Bu prosedürü sadece oturumu açmış ve dersin sahibi olan kullanıcı çalıştırabilir.
  // Bu prosedür sisteme daha önce yüklenmiş bir dosyayı derse dahil eder.
   
   if (WebSecurity.IsAuthenticated==false || Roles.IsUserInRole("Ogretici")==false)
     {
        
        Response.StatusCode=401;
        Response.End(); 
     }
 
    // Gelen ders ve dosya bilgilerini oku
    var DosyaID=Request["DosyaID"];
    var DersID=Request["DersID"];

    // Eğer dersID ve dosyaID boşsa hata kodu döndür.
    if (string.IsNullOrEmpty(DersID))
    {
        Response.StatusCode=500;
        Response.End();
    }

    if (string.IsNullOrEmpty(DosyaID))
    {
        Response.StatusCode=500;
        Response.End();
    }
    var db=Database.Open("fb1ae");

    // Ders bilgilerini veritabanından oku
    var queryDers=db.QuerySingle("SELECT * FROM Ders WHERE DersID=@0 AND UserID=@1 AND Silindi=0 AND Arsivlendi=0",DersID, WebSecurity.CurrentUserId);
    
    if (queryDers==null)
    {
      Response.StatusCode=502;
      Response.End();   
    }

    // İşlemi yapan kullanıcı dersin sahibi mi ? Eğer değilse hata kodu döndür.
    if (queryDers.UserID!=WebSecurity.CurrentUserId)
    {
            Response.StatusCode=400;
            Response.End();  
    }

    // Dosya daha önce derse eklenmiş mi ? Eğer eklenmişse aynı dosyayı ikinci kez derse eklemek istemiyoruz. Bunun için hata kodu döndür.
    if (db.QueryValue("SELECT COUNT(*) FROM DersDosyalari WHERE DersID=@0 AND DosyaID=@1",DersID,DosyaID)>0)
    {
        db.Close();
        Response.StatusCode=501;
        Response.End();
    }
    
    // Dosyayı derse ekle
    db.Execute("INSERT INTO DersDosyalari(DosyaID,DersID) VALUES(@0,@1)",DosyaID,DersID);

    // Dosyay Ders için erişim izni ver (Bu izin dersi takip eden öğrencilerin dosyaya olan erişimini sağalayacak)
    db.Execute("INSERT INTO DosyaIzinDers(DosyaID,DersID) VALUES(@0,@1)",DosyaID,DersID);
    
    // Derse dosya eklenmiş olması yeni bir aktivite anlamına geliyor. Yeni bir aktivite oluştur.
    var queryEklenenDosya=db.QuerySingle("SELECT * FROM Dosya WHERE DosyaID=@0",DosyaID);
    db.Execute("INSERT INTO Aktivite(UserID,DersID,Renk,Ikon,URL,IlaveMetin,IliskiliOge,EylemID) VALUES(@0,@1,@2,@3,@4,@5,@6,@7)",WebSecurity.CurrentUserId,DersID,"success","fa-file-text-o",Href("~/Dosya/Indir?DosyaID=" + DosyaID),queryEklenenDosya.Aciklama,"drsdsy" + DosyaID.ToString(),1);
   
    // Yeni bir aktivite oluşturulması dersi takip edenlere yeni bir bildirim oluşturulmasını gerektiriyor. Yeni bir bildirim oluştur.
    db.Execute("INSERT INTO Bildirim(Url,EylemiYapanUserID,IliskiliOge,EylemID,DersID) VALUES(@0,@1,@2,@3,@4)","~/Ders/?DersID=" + DersID + "&Liste=dosya",WebSecurity.CurrentUserId,"drsdsy" + DosyaID.ToString(),2,DersID);
    var eklenenBildirimID=db.GetLastInsertId();

    // Bu bildirimi öğrencilerin okuması gerekiyor. 
    db.Execute("INSERT INTO BildirimOkunmasiGereken(UserID,BildirimID) SELECT UserID,@0 FROM DersTakip WHERE DersID=@1 AND Durum=2",eklenenBildirimID,DersID);

    Json.Write(queryEklenenDosya, Response.Output);
    db.Close();   
    Response.ContentType = "application/json";
    Response.End();
    
}


