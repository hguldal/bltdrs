@{
  // Bu prosedürü sadece oturumu açmış ve dersin sahibi olan kullanıcı çalıştırabilir.
  // Bu prosedür sisteme yeni bir dosya yükler ve bu dosyayı derse dahil eder.
  
   if (WebSecurity.IsAuthenticated==false || Roles.IsUserInRole("Ogretici")==false)
     {
       Response.StatusCode=401;
       Response.End(); 
     }

    var azureDosyaAdi=Request["AzureDosyaAdi"];
    var boyut=Request["DosyaBoyut"];
    var dosyaAdi=Request["DosyaAdi"];
    var dosyaTuru=Request["DosyaTuru"]; 
    var DersID=Request["DersID"];   
    var aciklama=Request["Aciklama"];

    if (string.IsNullOrEmpty(azureDosyaAdi))
    {
        Response.StatusCode=504;
        Response.End();

    }

    if (string.IsNullOrEmpty(dosyaAdi))
    {
        Response.StatusCode=504;
        Response.End();

    }

    // Dosyanın açıklama bilgisi boş olamaz eğer boşsa hata kodu döndür.
    if (string.IsNullOrEmpty(aciklama))
    {
        aciklama=dosyaAdi;
    }
   
    var db=Database.Open("fb1ae");
    
    // Ders bilgilerini veritabanından oku.
    var queryDers=db.QuerySingle("SELECT * FROM Ders WHERE DersID=@0 AND UserID=@1 AND Silindi=0 AND Arsivlendi=0",DersID, WebSecurity.CurrentUserId);
    
    if (queryDers==null)
    {
      Response.StatusCode=502;
      Response.End();   
    }

    // Eğer işlemi yapan kullanıcı dersin sahibi değilse hata kodu döndür.
    if (queryDers.UserID!=WebSecurity.CurrentUserId)
    {
      Response.StatusCode=400;
      Response.End();  
    }
   
    var queryKullanici=db.QuerySingle("SELECT * FROM Profiles INNER JOIN UyelikTurleri ON Profiles.UyelikTuru=UyelikTurleri.UyelikID WHERE Profiles.userID=@0",WebSecurity.CurrentUserId);
    
    var toplamDosyaAlani= Convert.ToDouble(db.QueryValue("SELECT ISNULL(SUM(Boyut),0) as Toplam FROM Dosya WHERE UserID=@0 AND Silindi=0",WebSecurity.CurrentUserId)) + Convert.ToDouble(boyut);
    
     if (toplamDosyaAlani>Convert.ToDouble(queryKullanici.EgitmenDepolamaAlani))
     {
       db.Close();
       Response.StatusCode=502;
       Response.End(); 
     }
   
    // Dosya için rastgele bir numara oluştur.
    Random r=new Random();
                
    var yeniDosyaID=r.Next(1000,1000000);

    // Bu rastgele sayı daha önce kullanılmış mı kontrol et kullanılmamış bir numara bulana kadar dene.
    while (db.QueryValue("SELECT COUNT(*) FROM Ders WHERE DersID=@0",yeniDosyaID)>0)
      {
         yeniDosyaID=r.Next(1000,1000000);
      }

   // Diske kaydedilmiş olan dosya bilgilerini veritabanına yaz.
    db.Execute("INSERT INTO Dosya(DosyaID,UserID,Aciklama,Boyut,Uzanti,Tur,DosyaAdi,KayitAdi) VALUES(@0,@1,@2,@3,@4,@5,@6,@7)",yeniDosyaID,WebSecurity.CurrentUserId,aciklama,boyut,"",dosyaTuru,dosyaAdi,azureDosyaAdi);
    // Dosyayı derse dahil et.
    db.Execute("INSERT INTO DersDosyalari(DosyaID,DersID) VALUES(@0,@1)",yeniDosyaID,DersID);
    // Dersi takip edenler için dosyaya erişim hakkı ver.
    db.Execute("INSERT INTO DosyaIzinDers(DosyaID,DersID) VALUES(@0,@1)",yeniDosyaID,DersID);
    
    // Derse yeni bir dosya eklendiği için o ders için bir aktivite oluştur.

    var queryEklenenDosya=db.QuerySingle("SELECT * FROM Dosya WHERE DosyaID=@0",yeniDosyaID);
    db.Execute("INSERT INTO Aktivite(UserID,DersID,Metin,Renk,Ikon,URL,IlaveMetin,IliskiliOge,EylemID) VALUES(@0,@1,@2,@3,@4,@5,@6,@7,@8)",WebSecurity.CurrentUserId,DersID," bir dosya ekledi","success","fa-file-text-o",Href("~/Dosya/Indir?DosyaID=" + yeniDosyaID),aciklama,"drsdsy" + yeniDosyaID.ToString(),1);
    
    // Oluşturulan aktivite için bildirim oluştur.
    db.Execute("INSERT INTO Bildirim(Url,EylemiYapanUserID,IliskiliOge,EylemID,DersID) VALUES(@0,@1,@2,@3,@4)","~/Ders/?DersID=" + DersID + "&Liste=dosya",WebSecurity.CurrentUserId,"drsdsy" + yeniDosyaID.ToString(),2,DersID);
    var eklenenBildirimID=db.GetLastInsertId();

    // Dersi takip edenler için okunması gerekli bir bildirim oluştur.
    db.Execute("INSERT INTO BildirimOkunmasiGereken(UserID,BildirimID) SELECT UserID,@0 FROM DersTakip WHERE DersID=@1 AND Durum=2",eklenenBildirimID,DersID);

    //Eklenen dosyanın bilgilerini JSON olarak geri döndür bu bilgiler arayüzde dosyayı listeye ekleme işleminde kullanılacak.
    Json.Write(queryEklenenDosya, Response.Output);
    db.Close();   
    Response.ContentType = "application/json";
    Response.End();
   
}


